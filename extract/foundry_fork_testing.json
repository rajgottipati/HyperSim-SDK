{"raw_content": "{\n  \"data\": {\n    \"extracted_information\": \"Foundry provides two main approaches for EVM simulation through fork testing: 'Forking Mode' for running an entire test suite against a forked environment via CLI, and 'Forking Cheatcodes' for programmatic control of multiple forks within Solidity test code. Both methods simulate a specific blockchain state at a given block number, allowing interaction with existing contracts as if on a real network.\",\n    \"specifications\": {\n      \"forking_mode_parameters\": {\n        \"flag\": \"`--fork-url <RPC_URL>`\",\n        \"optional_block_number\": \"`--fork-block-number <BLOCK_NUMBER>`\",\n        \"affected_chain_values_on_fork\": [\n          \"block_number\",\n          \"chain_id\",\n          \"gas_limit\",\n          \"gas_price\",\n          \"block_base_fee_per_gas\",\n          \"block_coinbase\",\n          \"block_timestamp\",\n          \"block_difficulty\"\n        ],\n        \"caching\": {\n          \"location\": \"`~/.foundry/cache/rpc/<RPC_URL>/<BLOCK_NUMBER>`\",\n          \"clear_cache_command\": \"`forge clean`\",\n          \"ignore_cache_flag\": \"`--no-storage-caching`\",\n          \"foundry_toml_config\": {\n            \"no_storage_caching\": \"boolean\",\n            \"rpc_storage_caching\": \"boolean\"\n          }\n        },\n        \"etherscan_integration\": {\n          \"flag\": \"`--etherscan-api-key <API_KEY>`\",\n          \"environment_variable\": \"`ETHERSCAN_API_KEY`\"\n        }\n      },\n      \"evm_version_configuration\": {\n        \"global_config\": \"`foundry.toml` (`evm_version = \\\"prague\\\"`)\",\n        \"inline_config\": \"`/// forge-config: default.evm_version = \\\"shanghai\\\"`\"\n      }\n    },\n    \"features\": [\n      {\n        \"name\": \"Forking Mode\",\n        \"description\": \"Runs an entire test suite against a specific forked environment by passing an RPC URL. Useful for integration testing with existing contracts on a simulated network.\",\n        \"usage\": \"`forge test --fork-url <RPC_URL> [--fork-block-number <BLOCK_NUMBER>]`\"\n      },\n      {\n        \"name\": \"Forking Cheatcodes\",\n        \"description\": \"Allows programmatic control of multiple forks directly in Solidity test code. Provides flexibility for test-by-test forking and managing various forked states.\",\n        \"cheatcodes\": [\n          \"`vm.createFork(<RPC_URL>)`\": \"Creates a new fork and returns its `uint256` identifier.\",\n          \"`vm.selectFork(<forkId>)`\": \"Activates a previously created fork.\",\n          \"`vm.createSelectFork(<RPC_URL>)`\": \"Creates a new fork and immediately selects it. Note: creates a new fork instance every call.\",\n          \"`vm.activeFork()`\": \"Returns the identifier of the currently active fork.\",\n          \"`vm.rollFork(<blockNumber>)`\": \"Sets the `block.number` of the active fork.\",\n          \"`vm.makePersistent(<address>)`\": \"Makes a specific account persistent across fork swaps. Persistent accounts exist on all forks.\",\n          \"`vm.isPersistent(<address>)`\": \"Checks if an account is persistent.\"\n        ],\n        \"state_management\": {\n          \"isolated_test_functions\": \"Each test function is executed with a copy of the state after `setUp` in its own stand-alone EVM.\",\n          \"fork_isolation\": \"Each fork is a standalone EVM with independent storage. Changes made while a fork is active are recorded only in that fork's storage.\",\n          \"persistence_exceptions\": \"The state of `msg.sender` and the test contract itself are persistent across fork swaps. Other accounts can be made persistent via `makePersistent`.\"\n        }\n      }\n    ],\n    \"statistics\": {},\n    \"temporal_info\": {\n      \"block_number_control\": \"Can specify `--fork-block-number` for CLI mode or `vm.rollFork()` for cheatcode mode.\",\n      \"block_timestamp_capture\": \"The `block_timestamp` from the forked chain is captured.\"\n    },\n    \"geographical_data\": {},\n    \"references\": [\n      \"Foundry documentation on Fork Testing (`/forge/tests/fork-testing`)\",\n      \"Foundry documentation on Forking Cheatcodes (`/reference/cheatcodes/forking`)\",\n      \"Foundry configuration reference for testing (`/config/reference/testing`)\"\n    ]\n  }\n}"}