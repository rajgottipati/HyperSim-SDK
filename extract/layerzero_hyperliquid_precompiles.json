{"extracted_information": "Hyperliquid utilizes precompiles and system contracts to facilitate interaction between its HyperEVM and HyperCore components. Precompiles are used in two primary ways: as System Contracts and as L1ActionPrecompiles. The `CoreWriter` (System Contract at `0x333...33`) is a crucial precompile for writing transactions to HyperCore. It writes to the first produced `HyperCore` block after the production of an EVM block, ensuring state synchronization. Integration patterns, particularly seen in the `Hyperliquid Composer` and its `_sendAssetToHyperCore` function, involve the `CoreWriter` to execute `spot transfer` actions on HyperCore. The `ICoreWriter(HLP_CORE_WRITER).sendRawAction(payload)` method is used, where the payload is encoded as `abi.encodePacked(abi.encodePacked(hex\"1600\", action))`. This payload structure specifies the version, action ID, and action bytes, enabling the Composer to instruct HyperCore via an EVM transaction to move tokens from its implied Core address to the actual receiver's address on HyperCore.", "specifications": {"system_contracts": {"HYPE_token_address": "0x2222222222222222222222222222222222222222", "Core_Spot_token_asset_bridge_address": "0x200000000000000000000000000000000000abcd", "CoreWriter_address": "0x3333333333333333333333333333333333333333"}, "L1ActionPrecompiles": {"L1Read_precompile_example_address": "0x0000000000000000000000000000000000000000"}, "CoreWriter_functionality": "Writes to the first produced HyperCore block after the production of the EVM block.", "L1Read_functionality": "Reads from the last produced HyperCore block at EVM transaction execution.", "asset_bridge_precompile_structure": "Address like 0x2000...abcd, where 'abcd' is the coreIndexId of the HIP-1 token in hexadecimal.", "CoreWriter_integration_method": "ICoreWriter(HLP_CORE_WRITER).sendRawAction(payload)", "CoreWriter_payload_encoding": "abi.encodePacked(abi.encodePacked(hex\"1600\", action))", "CoreWriter_payload_encoding_details": "[version][actionId][actionBytes] (1600 is version/actionId prefix)"}, "pricing": {}, "features": [{"type": "System Contracts", "description": "Precompiled contracts that serve specific system-level functions, including representing the HYPE token, acting as asset bridges for Core Spot tokens, and enabling writing actions to HyperCore."}, {"type": "L1ActionPrecompiles", "description": "Precompiled contracts that facilitate specific Layer 1 actions between HyperEVM and HyperCore, such as reading state (`L1Read`) or writing actions (`CoreWriter`)."}, {"name": "HyperEVM Reads from HyperCore", "description": "Achieved via precompiles, allowing HyperEVM to query state from HyperCore (e.g., perpetual positions)."}, {"name": "HyperEVM Writes to HyperCore", "description": "Achieved via events at specific precompile addresses and by transferring tokens through the asset bridge. The CoreWriter precompile is central to this."}, {"name": "Asset Bridge Precompile", "description": "A mechanism (system contract) at an address like 0x2000...abcd that links EVM Spot (ERC20) and Core Spot (HIP-1) tokens, acting as a lockbox for token transfers between HyperEVM and HyperCore."}], "statistics": {}, "temporal_info": {}, "geographical_data": {}, "references": []}