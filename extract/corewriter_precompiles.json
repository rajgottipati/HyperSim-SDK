{"extracted_information": "The provided content details interaction patterns with HyperCore, specifically focusing on the `CoreWriter` contract and the concept of `precompiles`. It illustrates how to encode actions for the `CoreWriter` contract and send them.", "specifications": {"CoreWriter_Contract_Address": "0x3333333333333333333333333333333333333333", "Action_Encoding_Header_Bytes": "4 bytes (e.g., 0x01, 0x00, 0x00, 0x07 for sendUsdClassTransfer)", "Action_ID_Example": "The bytes 0x01, 0x00, 0x00, 0x07 appear to form an Action ID or type header within the `data` payload."}, "pricing": {}, "features": ["Read precompiles (mentioned as a section heading, but no specific details provided in the snippet)", "CoreWriter contract for sending raw actions to HyperCore", "Action encoding details for CoreWriter interactions"], "statistics": {}, "temporal_info": {}, "geographical_data": {}, "references": [], "interaction_patterns": {"CoreWriter_Call_Pattern": "Actions are encoded using `abi.encode` for specific parameters (e.g., `ntl`, `toPerp`). The encoded action is then prefixed with a 4-byte header. This combined byte array is passed to the `sendRawAction` function of the `CoreWriter` contract."}, "integration_examples": {"sendUsdClassTransfer_Function_Example": {"Solidity_Contract": "CoreWriterCaller", "Function_Name": "sendUsdClassTransfer", "Parameters": [{"name": "ntl", "type": "uint64"}, {"name": "toPerp", "type": "bool"}], "Encoding_Process": ["Parameters `ntl` and `toPerp` are encoded using `abi.encode`.", "A `data` byte array is created, starting with `0x01, 0x00, 0x00, 0x07` (4 bytes for header/Action ID).", "The `encodedAction` bytes are appended to the `data` array starting from the 5th byte (index 4)."], "CoreWriter_Interaction": "Calls `CoreWriter(0x3333...3333).sendRawAction(data)`."}}}