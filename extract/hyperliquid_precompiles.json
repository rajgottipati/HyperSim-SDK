{"extracted_information": "The content mentions 'Read precompiles' as a topic for HyperEVM. It primarily details the `CoreWriter` contract, which plays a crucial role in enabling interaction with HyperCore by sending encoded actions. While not explicitly termed a 'precompiled contract' in the text, its fixed address and function are presented as a primary means of HyperCore interaction.", "specifications": {"CoreWriter_Contract_Address": "0x3333333333333333333333333333333333333333"}, "features": [{"contract_name": "CoreWriter", "function": "sendRawAction(bytes memory data)", "description": "This function is used to send raw, encoded actions to HyperCore. The 'data' parameter is a byte array that must contain a specific 4-byte header followed by the ABI-encoded parameters of the action.", "interaction_with_HyperCore": "Enables interaction with HyperCore by receiving structured byte data (representing an action) and forwarding it. This is the central mechanism for external contracts or applications to trigger operations within HyperCore."}, {"example_caller_contract": "CoreWriterCaller", "example_function": "sendUsdClassTransfer(uint64 ntl, bool toPerp)", "description": "An illustrative Solidity function demonstrating how to construct the 'data' payload for CoreWriter.sendRawAction. It ABI-encodes 'ntl' and 'toPerp' and prepends a specific 4-byte header (0x01000007) before calling CoreWriter.", "data_encoding_example": {"header_bytes_example": "0x01000007 (for sendUsdClassTransfer)", "encoded_payload_example": "abi.encode(ntl, toPerp)"}}, {"action_encoding_structure": "Actions that can be sent to HyperCore via CoreWriter are structured with specific details, including an Action ID, Action name, Fields, their Solidity Types, and Notes.", "encoding_fields_schema": ["Action ID", "Action", "Fields", "Solidity Type", "Notes"]}], "statistics": {}, "temporal_info": {}, "geographical_data": {}, "references": []}